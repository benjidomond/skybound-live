{"version":3,"sources":["charImages/charlotta.png","charImages/ferry.png","charImages/gran.png","charImages/katalina.png","charImages/ladiva.png","charImages/lancelot.png","charImages/lowain.png","charImages/metera.png","charImages/percival.png","charImages/vaseraga.png","charImages/zeta.png","SkyboundHome.js","charImages/index.js","SkyboundResults.js","AddVideo.js","Help.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SkyboundHome","props","state","deviceWidth","document","documentElement","clientWidth","console","log","this","className","to","color","size","href","id","React","Component","Charlotta","require","Ferry","Gran","Katalina","Ladiva","Lancelot","Lowain","Metera","Percival","Vaseraga","Zeta","SkyboundResults","players","characters","tags","events","loading","search","tempResults","updatedResults","videos","playersQuery","charactersQuery","tagsQuery","eventsQuery","videoIDs","searchTags","tempTags","noResults","resultClicked","updateSearch","bind","startSearch","startImageSearch","Promise","all","axios","get","playerResponse","characterResponse","tagResponse","eventResponse","setState","Object","values","data","e","target","value","setTimeout","findPlayers","findCharacters","findTags","findEvents","length","Array","from","Set","keys","map","player","finalResult","playerName","possibleResult","substring","toLocaleLowerCase","concat","character","characterName","tag","tagName","event","eventName","searchItem","innerText","searchOptions","tagId","tagSearch","alt","videoResponse","video","videoId","findVideos","tagSearchResponse","findTagVideos","vidResponse","type","placeholder","onChange","result","key","onClick","index","src","CharImgs","p1Character","p1Player","p2Character","p2Player","videoLink","AddVideo","winnerCharacter","winnerPlayer","handleSubmit","handleChange","resetForm","preventDefault","player1","player2","post","then","response","catch","error","name","window","location","reload","method","onSubmit","htmlFor","Help","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.39a2e558.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/charlotta.94234ba7.png\";","module.exports = __webpack_public_path__ + \"static/media/ferry.f40bd262.png\";","module.exports = __webpack_public_path__ + \"static/media/gran.984b4a46.png\";","module.exports = __webpack_public_path__ + \"static/media/katalina.085bb62e.png\";","module.exports = __webpack_public_path__ + \"static/media/ladiva.4fff345f.png\";","module.exports = __webpack_public_path__ + \"static/media/lancelot.0113b0c2.png\";","module.exports = __webpack_public_path__ + \"static/media/lowain.c06e0688.png\";","module.exports = __webpack_public_path__ + \"static/media/metera.9f9d4f2e.png\";","module.exports = __webpack_public_path__ + \"static/media/percival.9a1be4fc.png\";","module.exports = __webpack_public_path__ + \"static/media/vaseraga.db070508.png\";","module.exports = __webpack_public_path__ + \"static/media/zeta.2b148787.png\";","import React from \"react\";\r\nimport { PlusCircle, HelpCircle} from \"react-feather\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Homepage class\r\nclass SkyboundHome extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            deviceWidth: document.documentElement.clientWidth\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        console.log(\"The page width is \" + this.state.deviceWidth);\r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"homeDiv\">\r\n                <nav>\r\n                    <Link className=\"navLink\" to=\"/\">SKYBOUND ARTS</Link>\r\n                    <Link to=\"/add\"><PlusCircle color=\"white\" size={30} /></Link>\r\n                    <Link to=\"/help\"><HelpCircle color=\"white\" size={30} /></Link>\r\n                    <a className=\"navLink\" href=\"http://forums.skyboundarts.com\">FORUMS</a>\r\n                    {/* <Menu /> */}\r\n                </nav>\r\n                <div id=\"imgHeadContainer\">\r\n                    <p id=\"matchFinderText\">Match Finder</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SkyboundHome;","export const Charlotta = require(\"./charlotta.png\");\r\nexport const Ferry = require(\"./ferry.png\");\r\nexport const Gran = require(\"./gran.png\");\r\nexport const Katalina = require(\"./katalina.png\");\r\nexport const Ladiva = require(\"./ladiva.png\");\r\nexport const Lancelot = require(\"./lancelot.png\");\r\nexport const Lowain = require(\"./lowain.png\");\r\nexport const Metera = require(\"./metera.png\");\r\nexport const Percival = require(\"./percival.png\");\r\nexport const Vaseraga = require(\"./vaseraga.png\");\r\nexport const Zeta = require(\"./zeta.png\");","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport * as CharImgs from \"./charImages\";\r\nimport { PlayCircle } from \"react-feather\";\r\n\r\nclass SkyboundResults extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            //containers for all the database values which are used as search queries\r\n            players: [],\r\n            characters: [],\r\n            tags: [],\r\n            events: [],\r\n            //boolean that tracks the status of the initial get requests\r\n            loading: true,\r\n            //state variables used to hold and display the results retrieved from searches\r\n            search: \"\",\r\n            tempResults: [],\r\n            updatedResults: [],\r\n            //array of objects that holds all the videos from the searches\r\n            videos: [],\r\n            //secondary containers for search queries\r\n            playersQuery: [],\r\n            charactersQuery: [],\r\n            tagsQuery: null,\r\n            eventsQuery: [],\r\n            //holds all the video IDs which are stored when a search is conducted\r\n            videoIDs: [],\r\n            searchTags: [],\r\n            tempTags: [],\r\n            //controls whether or not results are / aren't displayed depending on if the search produced results\r\n            noResults: false,\r\n            //toggle that hides result after user click\r\n            resultClicked: false\r\n        }\r\n        this.updateSearch = this.updateSearch.bind(this);\r\n        this.startSearch = this.startSearch.bind(this);\r\n        this.startImageSearch = this.startImageSearch.bind(this);\r\n    }\r\n    async componentDidMount(){\r\n        //on componentMount, get all the players, characters, videos, and tags from the database. Once they are retrieved, load the page.\r\n        const [playerResponse, characterResponse, tagResponse, eventResponse] = await Promise.all([\r\n            axios.get(\"http://skyboundarts.azurewebsites.net/api/players/\"),\r\n            axios.get(\"http://skyboundarts.azurewebsites.net/api/characters/\"),\r\n            axios.get(\"http://skyboundarts.azurewebsites.net/api/videotags/\"),\r\n            axios.get(\"http://skyboundarts.azurewebsites.net/api/events/\")\r\n        ]);\r\n        this.setState({\r\n            players: Object.values(playerResponse.data),\r\n            characters: Object.values(characterResponse.data),\r\n            tags: Object.values(tagResponse.data),\r\n            events: Object.values(eventResponse.data),\r\n            loading: !this.state.loading,\r\n        }, () => {\r\n            console.log(this.state.players);\r\n            console.log(this.state.characters);\r\n            console.log(this.state.tags);\r\n            console.log(this.state.events);\r\n            console.log(this.state.loading);\r\n        })\r\n    }\r\n    updateSearch(e){\r\n        this.setState({\r\n            //Updates value when search is conducted\r\n            search: e.target.value,\r\n            resultClicked: false\r\n        },\r\n        () => {\r\n            setTimeout(() =>{\r\n            //Sees if search result is a character, player, tag, or event.\r\n            this.findPlayers();\r\n            this.findCharacters();\r\n            this.findTags();\r\n            this.findEvents();\r\n            //if there's less than 2 letters inserted in the searchbar, no results will be shown.\r\n            if (this.state.search.length < 2){\r\n                console.log(\"No Results\");\r\n                this.setState({\r\n                    tempResults: [],\r\n                    noResults: true\r\n                })\r\n            }\r\n            //Valid search\r\n            if (this.state.tempResults.length > 0){\r\n            this.setState({\r\n                noResults: false,\r\n                updatedResults: Array.from(new Set(this.state.tempResults))\r\n            })\r\n            }\r\n            //No results - search is invalid\r\n            else if (this.state.tempResults.length === 0) {\r\n                this.setState({\r\n                    noResults: true\r\n                },\r\n                () => {\r\n                    console.log(\"Invalid search. Please try again.\")\r\n                })\r\n            }\r\n        }, 200);\r\n        })\r\n    }\r\n    findPlayers(){\r\n            //Maps through all the players in the database, checking if the entered search result equals a substring from a player entry\r\n            Object.keys(this.state.players).map((player) => {\r\n                var finalResult = this.state.players[player].playerName;\r\n                var possibleResult = this.state.players[player].playerName.substring(0, this.state.search.length);\r\n                //lowercasing both the state and the result\r\n                this.setState({\r\n                    search: this.state.search.toLocaleLowerCase()\r\n                }, () => {\r\n                    possibleResult = possibleResult.toLocaleLowerCase();\r\n                    if (possibleResult === this.state.search){\r\n                        return this.setState({tempResults: this.state.tempResults.concat(finalResult)})\r\n                    }\r\n                    })\r\n                return null;\r\n            })\r\n    }\r\n    findCharacters(){\r\n            //Maps through all the characters in the database, checking if the entered search result equals a substring from a character entry\r\n            Object.keys(this.state.characters).map((character) => {\r\n            var finalResult = this.state.characters[character].characterName;\r\n            var possibleResult = this.state.characters[character].characterName.substring(0, this.state.search.length);\r\n            //lowercasing both the state and the result\r\n            this.setState({\r\n                search: this.state.search.toLocaleLowerCase()\r\n            }, () => {\r\n                possibleResult = possibleResult.toLocaleLowerCase();\r\n                if (possibleResult === this.state.search){\r\n                    return this.setState({tempResults: this.state.tempResults.concat(finalResult)})\r\n                }\r\n            })\r\n                return null;\r\n            })\r\n    }\r\n    findTags(){\r\n                //Maps through all the tags in the database, checking if the entered search result equals a substring from a tag entry\r\n                Object.keys(this.state.tags).map((tag) => {\r\n                var finalResult = this.state.tags[tag].tagName;\r\n                var possibleResult = this.state.tags[tag].tagName.substring(0, this.state.search.length);\r\n                //lowercasing both the state and the result\r\n                this.setState({\r\n                    search: this.state.search.toLocaleLowerCase()\r\n                }, () => {\r\n                    possibleResult = possibleResult.toLocaleLowerCase();\r\n                    if (possibleResult === this.state.search){\r\n                        return this.setState({tempResults: this.state.tempResults.concat(finalResult)})\r\n                    }\r\n                })\r\n                return null;\r\n            })\r\n    }\r\n    findEvents(){\r\n                //Maps through all the events in the database, checking if the entered search result equals a substring from an event entry\r\n                Object.keys(this.state.events).map((event) => {\r\n                var finalResult = this.state.events[event].eventName;\r\n                var possibleResult = this.state.events[event].eventName.substring(0, this.state.search.length);\r\n                //lowercasing both the state and the result\r\n                this.setState({\r\n                    search: this.state.search.toLocaleLowerCase()\r\n                }, () => {\r\n                    possibleResult = possibleResult.toLocaleLowerCase();\r\n                    if (possibleResult === this.state.search){\r\n                        return this.setState({tempResults: this.state.tempResults.concat(finalResult)})\r\n                    }\r\n                })\r\n                return null;\r\n            })\r\n    }\r\n    startSearch(e){\r\n        //Grabbing the innerText of the clicked query item\r\n        var searchItem = e.target.innerText;\r\n        //setting the state of the result to hide clicked results\r\n        this.setState({\r\n            resultClicked: true\r\n        })     \r\n        //quick check if it's a player\r\n        Object.keys(this.state.players).map((player) => {\r\n            if (this.state.players[player].playerName === searchItem){\r\n                return this.searchOptions(this.state.players[player].playerName, \"\", \"\");\r\n            }\r\n            return null;\r\n        })\r\n       //quick check if it's a character\r\n        Object.keys(this.state.characters).map((character) => {\r\n            if (this.state.characters[character].characterName === searchItem){\r\n                return this.searchOptions(\"\", this.state.characters[character].characterName, \"\");\r\n            }\r\n            return null;\r\n        })\r\n        //quick check if it's a tag\r\n        Object.keys(this.state.tags).map((tag) => {\r\n            if(this.state.tags[tag].tagName === searchItem){\r\n                //Haven't checked for existing IDs with tags yet\r\n                return this.setState({tagsQuery: this.state.tags[tag].tagId},\r\n                () => {\r\n                    this.tagSearch();\r\n                })\r\n            }\r\n            return null;\r\n        })\r\n        //quick check if it's an event\r\n        Object.keys(this.state.events).map((event) => {\r\n            if (this.state.events[event].eventName === searchItem){\r\n                return this.searchOptions(\"\", \"\", this.state.events[event].eventName);\r\n            }\r\n            return null;\r\n        }) \r\n    }\r\n    //This startImageSearch is conducted when character images are clicked on\r\n    startImageSearch(e){\r\n        var searchItem = e.target.alt;\r\n        //verifying that it's a character\r\n        Object.keys(this.state.characters).map((character) => {\r\n            if (this.state.characters[character].characterName === searchItem){\r\n                return this.searchOptions(\"\", this.state.characters[character].characterName, \"\");\r\n            }\r\n            return null;\r\n        })\r\n    }\r\n    //Conducts the asynchronous search request. This is performed when a user clicks on a database query (character, player, etc.)\r\n    async searchOptions(playerName = \"\", characterName = \"\", eventName = \"\"){\r\n        //Default search - performed when a search request is first conducted on the site\r\n        if (this.state.videoIDs.length === 0){\r\n            var videoResponse = await axios.get(`http://skyboundarts.azurewebsites.net/api/videos/search/?playerName=${playerName}&characterName=${characterName}&eventName=${eventName}`);\r\n            this.setState({\r\n                videos: Object.values(videoResponse.data)\r\n            },\r\n            () => {\r\n                console.log(this.state.videos);\r\n            })\r\n        }\r\n        else {\r\n            //Search that's conducted when users have already inserted a query which has narrowed down the selection of videos\r\n            videoResponse = await axios.get(`http://skyboundarts.azurewebsites.net/api/videos/search/?videoIDs=${this.state.videoIDs}&playerName=${playerName}&characterName=${characterName}&eventName=${eventName}`);\r\n            this.setState({\r\n                videos: Object.values(videoResponse.data)\r\n            },\r\n            () => {\r\n                console.log(this.state.videos);\r\n                Object.keys(this.state.videos).map((video) => {\r\n                    return this.setState({videoIDs: this.state.videos[video].videoId},\r\n                    () => {\r\n                        this.findVideos();\r\n                    })\r\n                })\r\n            })\r\n        }        \r\n    }\r\n    async tagSearch(){\r\n        //This search is ran when users click on a tag from the database and a query hasn't been performed yet\r\n        const tagSearchResponse = await axios.get(`http://skyboundarts.azurewebsites.net/api/mapvideotag/search/?searchTagID=${this.state.tagsQuery}`);\r\n        this.setState({\r\n            searchTags: Object.values(tagSearchResponse.data)\r\n        },\r\n        () => {\r\n            this.setState(state => ({\r\n                tempTags: state.searchTags.map(tag => {\r\n                    return tag.videoId;\r\n                })\r\n            }), () => {\r\n                console.log(this.state.tempTags);\r\n                this.findTagVideos();\r\n            })\r\n        })\r\n    }\r\n    async findTagVideos(){\r\n        //This search is done after tagSearch() in order to obtain the IDs of the respective videos that had that tag\r\n        const vidResponse = await axios.get(`http://skyboundarts.azurewebsites.net/api/videos/find/?videoIDs=${this.state.tempTags}`);\r\n        this.setState({\r\n            videos: Object.values(vidResponse.data)\r\n        },\r\n        () => {\r\n            console.log(this.state.videos);\r\n        })\r\n    }\r\n    async findVideos(){\r\n        //This is ran when the user attempts to search for a video by its ID.\r\n        const vidResponse = await axios.get(`http://skyboundarts.azurewebsites.net/api/videos/find/?videoIDs=${this.state.videoIDs}`);\r\n        this.setState({\r\n            videos: Object.values(vidResponse.data)\r\n        },\r\n        () => {\r\n            console.log(this.state.videos);\r\n        })\r\n    }\r\n    render(){\r\n        return (\r\n            <div>\r\n            <div className=\"searchContainer\">\r\n                <input id=\"homeSearch\" type = \"text\" placeholder=\"Type in a player, character, event, or tag!\" onChange={this.updateSearch} />\r\n                </div>\r\n                <div>\r\n                <ul>\r\n                    {\r\n                        this.state.noResults ? \r\n                        <li id=\"showNoResults\">No Results Found</li> :\r\n                        this.state.updatedResults.map(result => (\r\n                            <li className={this.state.resultClicked ? \"hideResults\" : \"showResults\"} key={result} onClick={this.startSearch}>\r\n                                <p className=\"resultData\">\r\n                                {result}\r\n                                </p>\r\n                            </li>\r\n                        ))\r\n                    }\r\n                </ul>\r\n                </div>\r\n                {\r\n                        Object.keys(this.state.videos).map((video, index) => {\r\n                            return (\r\n                            <div key={index}>\r\n                            <p id=\"vidEventName\" onClick={this.startSearch}>{this.state.videos[video].eventName}</p>\r\n                            <div id=\"videoContainer\">\r\n                            <img onClick={this.startImageSearch} className=\"vidImage\" src={CharImgs[this.state.videos[video].p1Character]} alt={this.state.videos[video].p1Character} />\r\n                            <p className=\"vidItem\" onClick={this.startSearch}>{this.state.videos[video].p1Player}</p>\r\n                            <p className=\"vidItem\">VS</p>\r\n                            <img onClick={this.startImageSearch} className=\"vidImage\" src={CharImgs[this.state.videos[video].p2Character]} alt={this.state.videos[video].p2Character} />\r\n                            <p className=\"vidItem\" onClick={this.startSearch}>{this.state.videos[video].p2Player}</p>\r\n                            <a className=\"vidLink vidItem\" href={this.state.videos[video].videoLink}>\r\n                                <PlayCircle />\r\n                            </a>\r\n                            </div>\r\n                            </div>\r\n                            );\r\n                        })\r\n                    }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SkyboundResults;","import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nclass AddVideo extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        //These state variables are containers for the values inserted when adding videos\r\n        this.state = {\r\n            eventName: \"\",\r\n            p1Player: \"\",\r\n            p2Player: \"\",\r\n            p1Character: \"\",\r\n            p2Character: \"\",\r\n            winnerCharacter: \"\",\r\n            winnerPlayer: \"\",\r\n            videoLink: \"\"\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.resetForm = this.resetForm.bind(this);\r\n    }\r\n    async handleSubmit(e){\r\n        e.preventDefault();\r\n        const video = {\r\n            \"EventName\": this.state.eventName,\r\n            \"P1Character\": this.state.p1Character,\r\n            \"P2Character\": this.state.p2Character,\r\n            \"WinnerCharacter\": this.state.winnerCharacter,\r\n            \"P1Player\": this.state.p1Player,\r\n            \"P2Player\": this.state.p2Player,\r\n            \"WinnerPlayer\": this.state.winnerPlayer,\r\n            \"VideoLink\": this.state.videoLink\r\n        }\r\n        /*\r\n        The event, player1, and player2 constants are used for the axios posts after a video is created, adding the search params to the database.\r\n        */\r\n        const event = {\r\n            \"eventName\": this.state.eventName\r\n        }\r\n        const player1 = {\r\n            \"playerName\": this.state.p1Player\r\n        }\r\n        const player2 = {\r\n            \"playerName\": this.state.p2Player\r\n        }\r\n        await axios.post(\"http://skyboundarts.azurewebsites.net/api/videos/\", video)\r\n        .then(function (response){\r\n            console.log(response);\r\n        })\r\n        .catch(function (error){\r\n            console.log(error);\r\n        })\r\n        await axios.post(\"http://skyboundarts.azurewebsites.net/api/events/\", event)\r\n        .then(function (response){\r\n            console.log(response);\r\n        })\r\n        .catch(function (error){\r\n            console.log(error);\r\n        })\r\n        await axios.post(\"http://skyboundarts.azurewebsites.net/api/players/\", player1)\r\n        .then(function (response){\r\n            console.log(response);\r\n        })\r\n        .catch(function (error){\r\n            console.log(error);\r\n        })\r\n        await axios.post(\"http://skyboundarts.azurewebsites.net/api/players/\", player2)\r\n        .then(function (response){\r\n            console.log(response);\r\n            this.resetForm();\r\n        })\r\n        .catch(function (error){\r\n            console.log(error);\r\n        })\r\n    }\r\n    handleChange(e){\r\n        const value = e.target.value;\r\n        this.setState({\r\n            [e.target.name]: value\r\n        })\r\n    }\r\n    resetForm(){\r\n        window.location.reload();\r\n    }\r\n    render(){\r\n        return (\r\n            <div>\r\n                <h1 id=\"addHeader\">Upload Video</h1>\r\n                {/* Form used to submit video content */}\r\n                <form id=\"vidForm\" method=\"POST\" className=\"addForm\" onSubmit={this.handleSubmit}>\r\n                <input className=\"formInput\" type=\"text\" value={this.state.eventName} name=\"eventName\" placeholder=\"Event Name\" onChange={this.handleChange} />\r\n                <input className=\"formInput\" type=\"text\" value={this.state.p1Player} name=\"p1Player\" placeholder=\"Player 1 Name\" onChange={this.handleChange} />\r\n                <input className=\"formInput\" type=\"text\" value={this.state.p2Player} name=\"p2Player\" onChange={this.handleChange} placeholder=\"Player 2 Name\" />\r\n                <input type=\"text\" className=\"formInput\" placeholder=\"Video Link\" name=\"videoLink\" value={this.state.videoLink} onChange={this.handleChange} />\r\n                <label className=\"addLabels\" htmlFor=\"P1Character\">Select P1's Character:</label>\r\n                <select className=\"addSelect\" name=\"p1Character\" id=\"P1Character\" onChange={this.handleChange} value={this.state.p1Character}>\r\n                    <option>Select an option!</option>\r\n                    <option value=\"Charlotta\">Charlotta</option>\r\n                    <option value=\"Ferry\">Ferry</option>\r\n                    <option value=\"Gran\">Gran</option>\r\n                    <option value=\"Katalina\">Katalina</option>\r\n                    <option value=\"Ladiva\">Ladiva</option>\r\n                    <option value=\"Lancelot\">Lancelot</option>\r\n                    <option value=\"Lowain\">Lowain</option>\r\n                    <option value=\"Metera\">Metera</option>\r\n                    <option value=\"Percival\">Percival</option>\r\n                    <option value=\"Vaseraga\">Vaseraga</option>\r\n                    <option value=\"Zeta\">Zeta</option>\r\n                </select>\r\n                <label className=\"addLabels\" htmlFor=\"P2Character\">Select P2's Character:</label>\r\n                <select className=\"addSelect\" name=\"p2Character\" value={this.state.p2Character} onChange={this.handleChange} id=\"P2Character\">\r\n                    <option>Select an option!</option>\r\n                    <option value=\"Charlotta\">Charlotta</option>\r\n                    <option value=\"Ferry\">Ferry</option>\r\n                    <option value=\"Gran\">Gran</option>\r\n                    <option value=\"Katalina\">Katalina</option>\r\n                    <option value=\"Ladiva\">Ladiva</option>\r\n                    <option value=\"Lancelot\">Lancelot</option>\r\n                    <option value=\"Lowain\">Lowain</option>\r\n                    <option value=\"Metera\">Metera</option>\r\n                    <option value=\"Percival\">Percival</option>\r\n                    <option value=\"Vaseraga\">Vaseraga</option>\r\n                    <option value=\"Zeta\">Zeta</option>\r\n                </select>\r\n                <p className=\"addLabels\">Which character won the match?</p>\r\n                {/* <select name=\"winnerCharacter\" value={this.state.winnerCharacter} onChange={this.handleChange} id=\"winningCharacter\">\r\n                    <option defaultValue=\"selected\">Select an option!</option>\r\n                    <option value={this.state.p1Character}>Player 1's Character</option>\r\n                    <option value={this.state.p2Character}>Player 2's Character</option>\r\n                </select> */}\r\n                <div className=\"formRadioContainer\">\r\n                <input type=\"radio\" id=\"p1Character\" name=\"winnerCharacter\" className=\"formRadio\" value={this.state.p1Character} onClick={this.handleChange} />\r\n                <label htmlFor=\"p1Character\">Player 1's Character</label>\r\n                <input type=\"radio\" id=\"p2Character\" name=\"winnerCharacter\" className=\"formRadio\" value={this.state.p2Character} onClick={this.handleChange} />\r\n                <label htmlFor=\"p2Character\">Player 2's Character</label>\r\n                </div>\r\n                <p className=\"addLabels\">Which player won the match?</p>\r\n                {/* <select name=\"winnerPlayer\" value={this.state.winnerPlayer} onChange={this.handleChange} id=\"winningPlayer\">\r\n                    <option>Select an option!</option>\r\n                    <option value={this.state.p1Player}>Player 1</option>\r\n                    <option value={this.state.p2Player}>Player 2</option>\r\n                </select> */}\r\n                <div className=\"formRadioContainer\">\r\n                <input type=\"radio\" id=\"p1Player\" name=\"winnerPlayer\" className=\"formRadio\" value={this.state.p1Player} onClick={this.handleChange} />\r\n                <label htmlFor=\"p1Player\">Player 1</label>\r\n                <input type=\"radio\" id=\"p2Player\" name=\"winnerPlayer\" className=\"formRadio\" value={this.state.p2Player} onClick={this.handleChange} />\r\n                <label htmlFor=\"p2Player\">Player 2</label>\r\n                </div>\r\n                <br />\r\n                {/* Moving Video Link above */}\r\n                {/* <input type=\"text\" className=\"formInput\" placeholder=\"Video Link\" name=\"videoLink\" value={this.state.videoLink} onChange={this.handleChange} /> */}\r\n                <input id=\"formSubmit\" type=\"submit\" value=\"Add Video\" />\r\n                </form>\r\n                <button id=\"formReset\"  onClick={this.resetForm}>Reset Form</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddVideo;","import React from \"react\";\r\nimport { ArrowLeft } from \"react-feather\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Help extends React.Component {\r\n    render(){\r\n        return (\r\n            <div>\r\n                <h1 id=\"helpHeader\">Help</h1>\r\n                <h2 className=\"helpQuestion\">How do I use Skybound Arts?</h2>\r\n                    <div className=\"helpContainer\">\r\n                    <span>By inputting <strong>any</strong> of the following:</span>\r\n                    <ul>\r\n                        <li>A Granblue Fantasy Versus character</li>\r\n                        <li>A competitive Granblue Fantasy Versus player</li>\r\n                        <li>Fighting game community events that have featured Granblue Fantasy Versus</li>\r\n                        <li>Tags which describe outcomes that happen in a match such as a <i>Perfect</i> (full tag list will be uploaded in the future!)</li>\r\n                    </ul>\r\n                    <p id=\"helpSubtext\">You'll be able to search our match database for the footage that you seek! For those who are unfamiliar with \r\n                          Granblue Fantasy Versus as a whole, feel free to type in <i>La</i> into the home page's search bar to get a feel for how\r\n                          the site finds results. Lancelot, Ladiva and any fighting game event titles starting with La will appear in the results. The results will\r\n                          update as long as you keep typing!\r\n                    </p>\r\n                    <Link to=\"/\"><ArrowLeft color=\"#4D97E4\" size={30} /></Link>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Help;","import React from 'react';\nimport './App.css';\nimport SkyboundHome from \"./SkyboundHome.js\";\nimport SkyboundResults from \"./SkyboundResults.js\";\nimport AddVideo from \"./AddVideo.js\";\n// import Report from \"./Report.js\";\nimport Help from \"./Help.js\";\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n      <SkyboundHome />\n      <Switch>\n      <Route exact path=\"/\" component={SkyboundResults} />\n      <Route exact path=\"/add\" component={AddVideo}/>\n      {/* <Route exact path=\"/report\" component={Report}/> */}\n      <Route exact path=\"/help\" component={Help} />\n      </Switch>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}